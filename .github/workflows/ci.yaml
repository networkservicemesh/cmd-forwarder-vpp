---
name: ci
on:
  push:
    branches:
      - 'main'
      - 'release/**'
  pull_request:
jobs:
  yamllint:
    uses: networkservicemesh/.github/.github/workflows/yamllint.yaml@main
    with:
      config_file: "./.yamllint.yml"

  shellcheck:
    uses: networkservicemesh/.github/.github/workflows/shellcheck.yaml@main

  golangci-lint:
    uses: networkservicemesh/.github/.github/workflows/golangci-lint.yaml@main

  excludeFmtErrorf:
    uses: networkservicemesh/.github/.github/workflows/exclude-fmt-errorf.yaml@main

  restrictNSMDeps:
    uses: networkservicemesh/.github/.github/workflows/restrict-nsm-deps.yaml@main
    with:
      allowed_repositories: "api, sdk, sdk-k8s, sdk-kernel, sdk-sriov, sdk-vpp, govpp, vpphelper"

  checkgomod:
    uses: networkservicemesh/.github/.github/workflows/checkgomod.yaml@main

  gogenerate:
    uses: networkservicemesh/.github/.github/workflows/cmd-gogenerate.yaml@main

  excludereplace:
    uses: networkservicemesh/.github/.github/workflows/exclude-replace.yaml@main

  docker-build-and-test:
    if: github.repository != 'networkservicemesh/cmd-template'
    uses: networkservicemesh/.github/.github/workflows/docker-build-and-test.yaml@main
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
  
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: "Build and push"
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
